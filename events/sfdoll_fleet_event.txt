namespace = sfdoll_fleet_event
#on_entering_battle,是否为铁血的舰队，This = owner of fleet 1,FromFrom = fleet 1,FromFromFrom = fleet 2
country_event = {
	id = sfdoll_fleet_event.1
	is_triggered_only = yes
	hide_window = yes
	title= fleet_sfdoll_event.1
	trigger = {	has_authority = auth_gf_sfdoll	 }
	immediate = {

		if = {
			limit = {
				fromfrom = {
					#复活的新舰队30天内不能触发
					NOT = {
						has_fleet_flag = flag_sfdoll_fleet_rebuild
					}
					any_owned_ship = {
						has_component = component_aura_sfdoll_1
					}
				}
			}
			fromfromfrom = {
				fleet_event = {
					id = sfdoll_fleet_event.7
				}
			}

		}

		# fromfrom = {
		# 	every_owned_ship = {
		# 		if = {
		# 			limit = {
		# 				OR = {
		# 					is_ship_size = sfdoll_warship_3
		# 					is_ship_size = sfdoll_warship_4
		# 					is_ship_size = ship_sfdoll_carrier
		# 				}
		# 			}
		# 			set_disable_at_health = 0
		# 		}
		# 	}
		# 	if = {
		# 		limit = {
		# 			any_owned_ship = {
		# 				has_component = component_aura_sfdoll_1
		# 			}
		# 		}
		# 		root.fromfromfrom = {
		# 			fleet_event = {
		# 				id = sfdoll_fleet_event.6
		# 			}
		# 		}
		# 	}
		# }
	}
}

#舰队伪无敌
# fleet_event = {
# 	id = sfdoll_fleet_event.2
# 	hide_window = yes
# 	is_triggered_only = yes
# 	trigger = {
# 		is_in_combat = yes
# 		NOT = {
# 			has_fleet_flag = sfdoll_fleet_revive_lock
# 		}
# 	}
# 	immediate = {
# 		set_timed_fleet_flag = {
# 			flag = sfdoll_fleet_revive_lock
# 			days = 28
# 		}
# 		every_owned_ship = {
# 			if = {
# 				limit = { has_component = sfdoll_aux_rebuild_2	}
# 				set_ship_flag = ship_sfdoll_can_revive
# 				set_disable_at_health = 0
# 				ship_event = {
# 					id = sfdoll_fleet_event.3
# 					days = 10
# 				}
# 			}
# 			else_if = {
# 				limit = { has_ship_flag = ship_sfdoll_can_revive }
# 				set_disable_at_health = -1
# 				remove_ship_flag = ship_sfdoll_can_revive
# 			}
# 		}

# 		#循环执行
# 		fleet_event = {
# 			id = sfdoll_fleet_event.2
# 			days = 30
# 		}
# 	}
# }

#清除锁血效果
# ship_event = {
# 	id = sfdoll_fleet_event.3
# 	hide_window = yes
# 	is_triggered_only = yes
# 	immediate = {
# 		if = {
# 			limit = { has_ship_flag = ship_sfdoll_can_revive }
# 			set_disable_at_health = -1
# 			remove_ship_flag = ship_sfdoll_can_revive
# 		}	
# 	}
# }

#diabled
ship_event = {
	id = sfdoll_fleet_event.3
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		is_ship_size = sfdoll_warship_4
	}
	# immediate = {
	# 	set_disable_at_health = 0
	# }
}
ship_event = {
	id = sfdoll_fleet_event.4
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		OR = {
			is_ship_size = sfdoll_warship_4
			is_ship_size = sfdoll_star_attacker
		}
	}
	immediate = {
		if = {
			limit = {
				has_component = sfdoll_aux_rebuild_2
				NOT = {
					has_ship_flag = flag_sfdoll_aux_rebuild_2
					has_ship_flag = flag_sfdoll_aux_rebuild
				}
				# check_variable = {
				# 	which = sfdoll_aux_rebuild_2
				# 	value <4
				# }
			}
			repair_ship = yes
			set_disabled = no
			set_timed_ship_flag = {
				flag = flag_sfdoll_aux_rebuild_2
				days = 30
			}
			# change_variable = {
			# 	which = sfdoll_aux_rebuild_2
			# 	value = 1
			# }
			# if = {
			# 	limit = {
			# 		NOT = {
			# 			has_ship_flag = flag_sfdoll_aux_rebuild_2
			# 		}
			# 	}
			# 	set_timed_ship_flag = {
			# 		flag = flag_sfdoll_aux_rebuild_2
			# 		days = 28
			# 	}
			# 	ship_event = {
			# 		id = sfdoll_fleet_event.8
			# 		days = 30
			# 	}
			# }

		}
		else = {
			destroy_ship = this
		}
	}
}

#舰船破坏的统一检测,this = owner of destroyed ship,fromfrom = destroyed ship
country_event = {
	id = sfdoll_fleet_event.5
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_authority = auth_gf_sfdoll
	}
	immediate = {
		fromfrom = {
			#诺耶露受损
			if = {
				limit = {	is_ship_size = ship_sfdoll_noel	}
				root = {
					set_timed_country_flag = {
						flag = sfdoll_noel_is_destroyed
						days = 360
					}
				}
			}

			#高维船受损
			if = {
				limit = {	is_ship_size = sfdoll_exd_science_ship	}
				root = {
					set_timed_country_flag = {
						flag = sfdoll_exd_science_ship_destroyed
						days = 360
					}
				}
			}
			
			if = {
				limit = {
					has_component = sfdoll_aux_rebuild
					NOT = {
						has_ship_flag = flag_sfdoll_aux_rebuild
					}
				}

				#船数>1则在同一舰队内刷船
				if = {
					limit = {
						fleet = {
							num_ships > 1
						}
					}
					sfdoll_warship_rebuild = yes
				}
				else = {
					sfdoll_warship_rebuild_num1 = yes
				}
			}
		}
	}
}


fleet_event = {
	id = sfdoll_fleet_event.6
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		add_modifier = {
			modifier = aura_sfdoll_2_modifier
			days = 60
		}
	}
}

fleet_event = {
	id = sfdoll_fleet_event.7
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		NOT = {
			has_fleet_flag = flag_aura_sfdoll_1_modifier
		}
	}
	immediate = {
		add_modifier = {
			modifier = aura_sfdoll_1_modifier
			days = 30
		}
		set_timed_fleet_flag = {
			flag = flag_aura_sfdoll_1_modifier
			days = 30
		}
	}
}

fleet_event = {
	id = sfdoll_fleet_event.9
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		NOT = {
			has_fleet_flag = flag_aura_sfdoll_1
		}
	}
	immediate = {
		
		if = {
			limit = {
				always = yes
				# NOT = {
				# 	has_fleet_flag = flag_aura_sfdoll_1_modifier
				# }
				# solar_system = {
				# 	any_ship_in_system = {
				# 		has_component = component_aura_sfdoll_1
				# 		owner = {
				# 			is_hostile = root.owner
				# 		}
				# 	}
				# }
			}

			add_modifier = {
				modifier = aura_sfdoll_1_modifier
				days = 30
			}
			set_timed_fleet_flag = {
				flag = flag_aura_sfdoll_1_modifier
				days = 30
			}
			solar_system = {
				every_fleet_in_system = {
					owner = {
						create_message = {
							type = MEGASTRUCTURE_BUILT
							localization = 2222
							days = 1800
							target = prev
						}
					}
				}
			}
		}

		solar_system = {
			every_fleet_in_system = {
				owner = {
					create_message = {
						type = MEGASTRUCTURE_BUILT
						localization = 111
						days = 1800
						target = prev
					}
				}
			}
		}
		set_timed_fleet_flag = {
			flag = flag_aura_sfdoll_1
			days = 58
		}
	}
	after = {
		fleet_event = {
			id = sfdoll_fleet_event.9
			days = 60
		}
	}
}

#铁血舰队被破坏的统一检测
# This = owner of fleet 1 (destroyed)
# From = owner of fleet 2 (combatant)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
country_event = {
	id = sfdoll_fleet_event.10
	hide_window = yes
	is_triggered_only = yes
	trigger = {	has_authority = auth_gf_sfdoll	 }
	immediate = {
		sfdoll_fleet_rebuild = yes
	}
}

#是否生成移动星门 This = owner of fleet From = disbanded fleet
country_event = {
	id = sfdoll_fleet_event.11
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		has_country_flag = sfdoll_empire
		from = { has_fleet_flag = flag_sfdoll_gateway_ship	}
	}
	immediate = {
		from.solar_system = {
			spawn_megastructure = {
				type = sfdoll_mobile_gateway_01
				owner = root
				coords_from = root.from
				init_effect = {	activate_gateway = this	 }
			}
		}
	}
}